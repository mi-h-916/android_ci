on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: Deploy target
        options:
          - dev1
          - dev2
          - prod
      message:
        required: true
        default: "Write some messsage here"
      dryrun:
        type: boolean
        description: Is dryrun?
        default: true
      environment:
        type: environment
jobs:
  slack_notification:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: extract_branch

      - name: post message to Slack
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          text: "Build ${{ steps.extract_branch.outputs.branch }} ..."
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: extract_branch

      # チェックアウト
      - uses: actions/checkout@v4

      # Gradleラッパースクリプトが正しいものか確認
      - uses: gradle/wrapper-validation-action@v1

      # JDKのセットアップ
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: microsoft
          java-version: 17

      # Gradleのキャッシュ復元
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 依存関係の出力
      - name: Displays the Android dependencies of the project
        run: ./gradlew androidDependencies

      # コンパイル
      - name: Run Compile
        env:
          INCOMING_UPLOAD_URL: ${{ secrets.SLACK_FILE_UPLOAD }}
        run: |
          echo "target: ${{ github.event.inputs.target }}"
          echo "message: ${{ github.event.inputs.message }}"
          echo "dryrun: ${{ github.event.inputs.dryrun }}"
      - name: post message to Slack
        if: success()
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          text: "Build Successsss ${{ steps.extract_branch.outputs.branch }} !"

      - name: post message to Slack
        if: failure()
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          text:  "Build Error ${{ steps.extract_branch.outputs.branch }} !"